@using FindYourMakeUp.Web.Areas.Administration.ViewModels

@{
    ViewBag.Title = "Products administration";
    const string ControllerName = "Products";
}

<h2>@ViewBag.Title</h2>

@Html.ValidationSummary()

@(Html.Kendo()
      .Grid<ProductsViewModel>()
      .Name("grid")
      .Columns(cols =>
      {
          cols.Bound(pr => pr.Id).Hidden();
          cols.Bound(pr => pr.Name);
          cols.Bound(pr => pr.Description);
          cols.Bound(pr => pr.CategoryId).ClientTemplate("#= CategoryName #");
          cols.Bound(pr => pr.ManufacturerId).ClientTemplate("#= ManufacturerName #");
          cols.Bound(pr => pr.ProductTypeId).ClientTemplate("#= ProductTypeName #");
          cols.Command(com => com.Edit()).Title("Промяна");
          cols.Command(com => com.Destroy()).Title("Изтриване");
      })
      .ColumnMenu()
      .Pageable(page => page.Refresh(true))
      .Sortable()
      .Groupable()
      .Filterable()
      .Editable(edit => edit.Mode(GridEditMode.InLine))
      .ToolBar(toolbar => toolbar.Create())
      .DataSource(data => data
                              .Ajax()
                              .Model(m =>
                              {
                                  m.Id(adv => adv.Id);
                                  m.Field(p => p.CreatedOn).Editable(false);
                                  m.Field(p => p.CategoryId).DefaultValue((ViewData["DefaultCategories"] as CategoryViewModel).Id);
                                  m.Field(p => p.ManufacturerId).DefaultValue((ViewData["DefaultManufacturers"] as ManufacturerViewModel).Id);
                                  m.Field(p => p.ProductTypeId).DefaultValue((ViewData["DefaultProductTypes"] as ProductTypeViewModel).Id);
                                  
                              })
                              .Read(read => read.Action("Read", ControllerName))
                              .Create(create => create.Action("Create", ControllerName))
                              .Update(update => update.Action("Update", ControllerName))
                              .Destroy(destroy => destroy.Action("Destroy", ControllerName))))